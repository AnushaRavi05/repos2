1.ABS(n)
SELECT ABS(-8) AS absolute_value;
Output: 8
2.CEIL(n)
SELECT CEIL(3.2) AS ceil_value;
Output: 4
3.FLOOR(n)
SELECT FLOOR(3.9) AS floor_value;
Output: 3
4.MOD(m, n)
SELECT MOD(17, 5) AS mod_value;
Output: 2
5.POWER(m, n)
SELECT POWER(3, 4) AS power_value;
Output: 81
6.SQRT(n)
SELECT SQRT(16) AS sqrt_value;
Output: 4
7.TRUNC(m [,n])
SELECT TRUNC(5.678, 2) AS truncated_value;
Output: 5.67
(For truncating to an integer)
SELECT TRUNC(5.678) AS truncated_integer;
Output: 5
8.ROUND(m [,n])
SELECT ROUND(5.678, 2) AS rounded_value;
Output: 5.68
(For rounding to an integer)
SELECT ROUND(5.678) AS rounded_integer;
Output: 6
9.EXP(n)
SELECT EXP(1) AS exp_value;
Output: 2.718281828459045 (approximately)
10.SIGN(n)
SELECT SIGN(5) AS sign_value;
Output: 1 (since 5 is positive)
SELECT SIGN(0) AS sign_value;
Output: 0 (since it's zero)
SELECT SIGN(-3) AS sign_value;
Output: -1 (since -3 is negative)
CHARACTER FUNCTIONS:
11. CHR(n)
Converts an ASCII value to its corresponding character.

SELECT CHR(65) AS character;
Output: A (since 65 is the ASCII code for 'A').
12. CONCAT(s1, s2)
Concatenates two strings s1 and s2.

SELECT CONCAT('Hello', ' World') AS concatenated_string;
Output: Hello World
13. LOWER(s1)
Converts all characters in s1 to lowercase.

SELECT LOWER('HELLO WORLD') AS lower_case_string;
Output: hello world
14. UPPER(s1)
Converts all characters in s1 to uppercase.

SELECT UPPER('hello world') AS upper_case_string;
Output: HELLO WORLD
15. LPAD(s1, n, char1)
Pads s1 on the left to a total length of n with the character char1.

SELECT LPAD('123', 5, '0') AS padded_string;
Output: 00123 (adds 0 to the left of 123 to make the total length 5).
16. RPAD(s1, n, char1)
Pads s1 on the right to a total length of n with the character char1.

SELECT RPAD('123', 5, '0') AS padded_string;
Output: 12300 (adds 0 to the right of 123 to make the total length 5).
17. SOUNDEX(s1)
Returns a four-character code that represents the phonetic sound of s1.

SELECT SOUNDEX('Smith') AS soundex_value;
Output: S530 (phonetically equivalent to "Smith").
18. LTRIM(s1, char)
Removes leading spaces (or specified characters) from s1.

SELECT LTRIM('   Hello', ' ') AS trimmed_string;
Output: Hello (removes leading spaces).
19. RTRIM(s1, char)
Removes trailing spaces (or specified characters) from s1.

SELECT RTRIM('Hello   ', ' ') AS trimmed_string;
Output: Hello (removes trailing spaces).
20. REPLACE(s1, search_string, replace_string)
Replaces occurrences of search_string in s1 with replace_string.

SELECT REPLACE('Hello World', 'World', 'SQL') AS replaced_string;
Output: Hello SQL
21. SUBSTR(s1, m)
Extracts a substring starting from the mth position in s1.

SELECT SUBSTR('Hello World', 7) AS substring;
Output: World (starting from the 7th character to the end).
(To extract a specific length of substring)


SELECT SUBSTR('Hello World', 7, 5) AS substring;
Output: World (starting from the 7th character and taking 5 characters).
22. TRANSLATE(s1, from_str, to_str)
Replaces characters in s1 from from_str with the corresponding characters in to_str.

SELECT TRANSLATE('abcdef', 'abc', 'xyz') AS translated_string;
Output: xydef (replaces 'a' with 'x', 'b' with 'y', and 'c' with 'z').
23. ASCII(s1)
Returns the ASCII value of the first character in s1.

SELECT ASCII('A') AS ascii_value;
Output: 65 (ASCII value for 'A').
24. INSTR(s1, char1)
Returns the position of the first occurrence of char1 in s1.

SELECT INSTR('Hello World', 'o') AS position;
Output: 5 (the first occurrence of 'o' is at position 5).
25. LENGTH(s1)
Returns the length of s1.

SELECT LENGTH('Hello World') AS string_length;
Output: 11 (length of the string "Hello World").
26. INITCAP(s1)
Capitalizes the first letter of each word in s1.

SELECT INITCAP('hello world') AS initcap_string;
Output: Hello World
